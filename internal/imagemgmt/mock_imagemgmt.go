// Code generated by MockGen. DO NOT EDIT.
// Source: imagemgmt.go
//
// Generated by this command:
//
//	mockgen -source=imagemgmt.go -package=imagemgmt -destination=mock_imagemgmt.go
//
// Package imagemgmt is a generated GoMock package.
package imagemgmt

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockImageMgmtIntf is a mock of ImageMgmtIntf interface.
type MockImageMgmtIntf struct {
	ctrl     *gomock.Controller
	recorder *MockImageMgmtIntfMockRecorder
}

// MockImageMgmtIntfMockRecorder is the mock recorder for MockImageMgmtIntf.
type MockImageMgmtIntfMockRecorder struct {
	mock *MockImageMgmtIntf
}

// NewMockImageMgmtIntf creates a new mock instance.
func NewMockImageMgmtIntf(ctrl *gomock.Controller) *MockImageMgmtIntf {
	mock := &MockImageMgmtIntf{ctrl: ctrl}
	mock.recorder = &MockImageMgmtIntfMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImageMgmtIntf) EXPECT() *MockImageMgmtIntfMockRecorder {
	return m.recorder
}

// CheckDiskUsageAgainstThreshold mocks base method.
func (m *MockImageMgmtIntf) CheckDiskUsageAgainstThreshold(thresholdPercent int) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckDiskUsageAgainstThreshold", thresholdPercent)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckDiskUsageAgainstThreshold indicates an expected call of CheckDiskUsageAgainstThreshold.
func (mr *MockImageMgmtIntfMockRecorder) CheckDiskUsageAgainstThreshold(thresholdPercent any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckDiskUsageAgainstThreshold", reflect.TypeOf((*MockImageMgmtIntf)(nil).CheckDiskUsageAgainstThreshold), thresholdPercent)
}

// CleanupUnusedImages mocks base method.
func (m *MockImageMgmtIntf) CleanupUnusedImages(thresholdPercent int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CleanupUnusedImages", thresholdPercent)
	ret0, _ := ret[0].(error)
	return ret0
}

// CleanupUnusedImages indicates an expected call of CleanupUnusedImages.
func (mr *MockImageMgmtIntfMockRecorder) CleanupUnusedImages(thresholdPercent any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CleanupUnusedImages", reflect.TypeOf((*MockImageMgmtIntf)(nil).CleanupUnusedImages), thresholdPercent)
}

// GetInuseImages mocks base method.
func (m *MockImageMgmtIntf) GetInuseImages() ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInuseImages")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInuseImages indicates an expected call of GetInuseImages.
func (mr *MockImageMgmtIntfMockRecorder) GetInuseImages() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInuseImages", reflect.TypeOf((*MockImageMgmtIntf)(nil).GetInuseImages))
}

// GetPinnedImages mocks base method.
func (m *MockImageMgmtIntf) GetPinnedImages() ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPinnedImages")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPinnedImages indicates an expected call of GetPinnedImages.
func (mr *MockImageMgmtIntfMockRecorder) GetPinnedImages() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPinnedImages", reflect.TypeOf((*MockImageMgmtIntf)(nil).GetPinnedImages))
}

// GetRemovalCandidates mocks base method.
func (m *MockImageMgmtIntf) GetRemovalCandidates() ([]imageMgmtImageInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRemovalCandidates")
	ret0, _ := ret[0].([]imageMgmtImageInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRemovalCandidates indicates an expected call of GetRemovalCandidates.
func (mr *MockImageMgmtIntfMockRecorder) GetRemovalCandidates() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRemovalCandidates", reflect.TypeOf((*MockImageMgmtIntf)(nil).GetRemovalCandidates))
}
